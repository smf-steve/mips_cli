movz $t1,$t2,$t3        Move conditional zero : Set $t1 to $t2 if $t3 is zero

move ==  movz $1, $t2, $zero

mult:
   working
   working
   operation

load:
   reading
   writting

Goals:
  #1 a tool to show students what each command does
  #2 an exectuion tool

# The following is called by each j & b instructioon
pc_assign
    LATCH_A
    LATCH_PC  --- $PC
  print_PC_update ()

alias     b="beq $zero, $zero,"
alias   beq="sub $1 $2     , z=? ; cond_pc_offset z"  # $3 imm

alias     j="nop           , z=1 ; pc_update"  # $1 address
alias   jal="move $ra, $_pc, z=1 ; pc_update"  # $1 address
alias  jalr="move $ra, $_pc, z=1 ; pc_assign"  # $1 register
alias    jr="nop           , z=1 ; pc_assign"  # $1 register

function pc_offset () {
  _imm=$1"	

  changes the value of the pc, via the an offset

  _offset=$(( $(sign-extension $1) << 2 ))
 
  if (z == true) assign pc =  pc + _offset

     pc:         0b???? xxxx xxxx xx sx xxxx xxxx xxxx xx xx;   
    offset:      0bssss ssss ssss s? ?? ???? ???? ???? ?? 00;
        +z        ------------------------------------------;  z == 
        pc:       0b???? ???? ???? ???? ???? ???? ???? ?? ??;   

}


function pc_assign () {
  # takes a 32-bit address and updates the pc
  _register="$1"

  assign $_pc $_register

  print_PC_update "mux_on" $_pc $_register
    z is alyws true, even if the $reg is not zero

     pc:         0b???? xxxx xxxx xxxx xxxx xxxx xxxx xx xx; false  
    reg:         0b???? ???? ???? ???? ???? ???? ???? ?? ??; true
         mux     ------------------------------------------  z := true
  
       pc:       0b???? ???? ???? ???? ???? ???? ???? ?? ??;   


}


function pc_update () {
   # takes a 26 bit address, and updates the pc

   _addresss="$1"

   _segment=$(( _pc & 0xF0000000   ))

   LATCH_PC[0]="--"
   LATCH_PC[1]=$(( _segment ))
   LATCH_PC[2]="pc & 0xF0000000"

   LATCH_A[0]=$(name $_address)
   LATCH_A[1]=$(( $(rval $_address) << 2))
   LATCH_A[2]="$(name $_address) << 2"

   assign $_pc $(( ${LATCH_PC[1]} | ${LATCH_A[2]})
   print_PC_update "|" $_pc

    # wiring
     pc:         0b???? xxxx xxxx xxxx xxxx xxxx xxxx xx xx;   pc & 0xF0000000
   addr:         0bxxxx ???? ???? ???? ???? ???? ???? ?? 00;   addr << 2
             |   ------------------------------------------;  
    wire:       0b???? ???? ???? ???? ???? ???? ???? ?? 00;

    # the following is pc_update
     pc:         0b???? ???? ???? ???? ???? ???? ???? ?? ??;
     wire:      0b???? ???? ???? ???? ???? ???? ???? ?? ??;   
        mux_on   ------------------------------------------
  
       pc:      0b???? ???? ???? ???? ???? ???? ???? ?? ??            

}




alias   beq="sub $1 $2     ; ps_offset
    PC + $(sign-extenion $3)
    mux_on/off
    pc:  (wither pc or pc update)

beq="sub $1 $2 

    z= true/false


     pc:         0b???? xxxx xxxx xxxx xxxx xxxx xxxx xx xx;   
     pc':        0b???? ???? ???? ???? ???? ???? ???? ?? ??;  "sign-ext imm"
         z ?= 1  ------------------------------------------
  
      pc:        0b???? ???? ???? ???? ???? ???? ???? ?? ??;   



